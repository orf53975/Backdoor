#! /bin/sh
# backdoor (c) Scott Carlson sacarlson@ipipi.com
set -e

# -*- sh -*-
# This file can be included with #SCRIPTSCOMMON#

# Fire up debconf and ensure it is at least version 2.0
# Usage: load_debconf2 "$@"  - needed as debconf will exec the current script,
# passing the current shell parameters. So we must lift these into the shell
# function. Missing this caused bug #555151.
load_debconf2() {
   . /usr/share/debconf/confmodule
   if ! db_version 2.0; then
      echo >&2 "$0: need DebConf 2.0 or later"
      exit 1
   fi
}

# Usage: y=`quote_backslashes "$x"`
# Quotes each backslash in $x with another backslash, outputs result.
quote_backslashes() {
  echo -n "$1" | sed 's,\\,\\\\,g'
}
#
# Copyright (C) 2014 Scott Carlson <sacarlson@ipipi.com>

case "$1" in
configure)
      load_debconf2 "$@"
      db_get backdoor/username
      username=$RET
      db_get backdoor/url
      url=$RET
      db_get backdoor/urlbackup
      urlbackup=$RET
      db_get backdoor/port
      port=$RET
      db_get backdoor/autostart
      autostart=$RET
      if [ "$RET" = "false" ]; then
        echo " autostart set to false will disable cron.d event \n"
        mv /etc/cron.d/backdoor_check /home/$username/backdoor_check
      fi
      echo "autostart returned as $autostart \n"
      db_get backdoor/restrict
      restrict=$RET
      echo " restrict input returned $restrict \n"
      if [ "$RET" = "true" ]; then
        echo " rssh restricted account active for user $username \n"
        usermod -s /usr/bin/rssh $username
        chsh -s /usr/bin/rssh $username
      else
        echo " rssh restricted shell disabled for user $username \n"
        usermod -s /bin/bash $username
        chsh -s /bin/bash $username
      fi
      
      if [ -d /home/$username/.ssh ]
      then
        rm -r /home/$username/.ssh
      fi
      if [ -d /home/$username/sshkeyb ]
      then
        rm -r /home/$username/sshkeyb
      fi
      mv /root/sshkeya /home/$username/.ssh
      mv /root/sshkeyb /home/$username/sshkeyb
      chown -R $username:$username /home/$username
      chmod 700 /home/$username/.ssh
      chmod 600 /home/$username/.ssh/id_rsa
      chmod 644 /home/$username/.ssh/authorized_keys
      chmod 644 /home/$username/.ssh/id_rsa.pub
  config=`mktemp /etc/backdoor.conf.XXXXXX`
  trap "rm -f $config; exit 1" HUP INT QUIT TERM
  cat <<EOF >>"$config"
# Configuration file for backdoor generated by debconf
# Backdoor (c) Scott Carlson  sacarlson@ipipi.com
# /etc/backdoor.conf

username=$username
url=$url
urlbackup=$urlbackup
port=$port

EOF
      mv $config /etc/backdoor.conf
      chmod +r /etc/backdoor.conf
      db_purge
      echo "after db_purge \n"
      sleep 3
      db_stop
      echo "after db_stop \n"

    ;;

  abort-upgrade|abort-remove|abort-deconfigure)

    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 0
    ;;
esac
echo "completed postinst \n"
exit 0
